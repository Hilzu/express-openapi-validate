openapi: 3.0.1
info:
  title: Example API
  version: 1.0.0
components:
  schemas:
    Test:
      type: object
      properties:
        value:
          type: number
      required:
      - value
    Tag:
      type: string
      minLength: 3
      maxLength: 10
      pattern: "^[a-zA-Z]+$"
  parameters:
    hello:
      name: hello
      in: query
      required: true
      schema:
        type: string
        minLength: 1
paths:
  /echo:
    post:
      description: Echo input back
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
              required:
              - input
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  output:
                    type: string
                required:
                - output
  /internal-ref:
    post:
      responses:
        '200':
          description: Response
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Test"
  /parameters:
    get:
      parameters:
        - name: param
          in: query
          required: true
          schema:
            type: string
        - name: porom
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Response
  /parameters/required:
    get:
      parameters:
        - name: q1
          in: query
          required: true
          schema:
            type: string
            minLength: 1
        - name: q2
          in: query
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          description: Response
  /parameters/header:
    get:
      parameters:
        - name: x-param
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
  /parameters/cookie:
    get:
      parameters:
        - name: session
          in: cookie
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Response
  /parameters/id/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: "^[0-9]+$"
      responses:
        '200':
          description: Response
  /nullable:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bar:
                  type: string
                baz:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Response
  /ref-parameter:
    get:
      parameters:
        - $ref: "#/components/parameters/hello"
      responses:
        '200':
          description: Response
  /different-rules:
    post:
      parameters:
        - name: q1
          in: query
          schema:
            $ref: "#/components/schemas/Tag"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                i:
                  type: integer
                  multipleOf: 2
                  minimum: 2
                  maximum: 256
      responses:
        '200':
          description: Response
  /required-body:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                a:
                  type: string
              required:
                - a
      responses:
        '200':
          description: Response
  /format:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                i32:
                  type: integer
                  format: int32
                i64:
                  type: integer
                  format: int64
                f:
                  type: number
                  format: float
                d:
                  type: number
                  format: double
                byte:
                  type: string
                  format: byte
                binary:
                  type: string
                  format: binary
                password:
                  type: string
                  format: password
                date:
                  type: string
                  format: date
      responses:
        '200':
          description: Response
  /responses:
    post:
      responses:
        2XX:
          description: Generic 2xx response
        201:
          description: Created response
          content:
            application/json:
              schema:
                properties:
                  hello:
                    type: string
                required:
                  - hello
        default:
          description: Default response
